name: Auto Create Tag

on:
  workflow_call:
    inputs:
      commitID:
        description: Commit ID
        required: true
        type: string
      tagname:
        description: Tag Name
        required: true
        type: string
      target_env:
        description: Deploy Target
        required: true
        type: string

env:
  TAG: ${{ inputs.tagname }}
  COMMIT_ID: ${{ inputs.commitID }}
  TARGET_ENV: ${{ inputs.target_env || 'stage' }}

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      NEWTAG: ${{ steps.verify-tag.outputs.NEWTAG }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get previous tag
        id: prev-tag
        run: |
          git fetch --tags
          echo "prev-tag= $(git tag --sort=committerdate | tail -1)" >> $GITHUB_OUTPUT

      - name: Show previous tag
        run: echo ${{steps.prev-tag.outputs.prev-tag}}

      - name: Generate new tag
        if: ${{ env.TAG == '' }}
        uses: actions/github-script@v7
        id: generate-tag
        with:
          script: |
            let repoTag = '${{ steps.prev-tag.outputs.prev-tag }}';
            repoTag = repoTag.trim();

            const fullYear = new Date().getFullYear();
            const shortYear = new Date().toLocaleDateString("en", {year: "2-digit"});
            const week = 7 * 24 * 60 * 60 * 1000;
            const today = new Date(); // the month is 0-indexed
            today.setHours(01, 01, 01)

            // Get the first Wednesday of the year
            function getWednesday(d) {
              d = new Date(d);
              const day = d.getDay(),
                diff = d.getDate() - day + (day == 0 ? -4 : 3); // adjust when day is sunday
              return new Date(d.setDate(diff));
            }
            const firstWednesdayofYear = getWednesday(new Date(fullYear, 0, 1)); // the month is 0-indexed


            // Calculate the number of weeks between today and the first Wednesday of the year
            function getWeeksBetween(d1, d2) {
                return ((d2 - d1) / week) * -1;
            }

            const weeksBetween = getWeeksBetween(today, firstWednesdayofYear);

            function getCurrentSprint(weeksBetween) {
              const day = today.getDay(),
                sprint = Math.ceil(weeksBetween / 2);
              return sprint;
            }
            const currentSprint = getCurrentSprint(weeksBetween);
            let releaseNum = 1;
            let newTag = `${shortYear}.${currentSprint}.${releaseNum}`;

            while (newTag <= repoTag) {
              releaseNum++;
              newTag = `${shortYear}.${currentSprint}.${releaseNum}`;
            }
            console.log({repoTag, newTag});
            return newTag;

      - name: Verify tag availability
        id: verify-tag
        run: |
          TAG=${{ env.TAG || steps.generate-tag.outputs.result }}
          if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
            echo "Tag ${TAG} already exist"
          else
            echo "Tag ${TAG} is available"
            echo "NEWTAG=${TAG}" >> $GITHUB_OUTPUT
          fi

      - run: git tag ${{ env.TAG || steps.generate-tag.outputs.result}} ${{ env.COMMIT_ID }}
      - run: git push origin ${{ env.TAG || steps.generate-tag.outputs.result}}
  
  trigger-deploy:
    name: Trigger deploy workflow for stage
    needs: [tag]
    uses: ./.github/workflows/deploy.yml
    with:
      target_env: ${{ inputs.TARGET_ENV }}
      tag: ${{ inputs.tagname || needs.tag.outputs.NEWTAG }}